package com.mycomp.##module_name_lower_case##;

import javax.servlet.annotation.WebInitParam;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.velocity.Template;
import org.apache.velocity.context.Context;

import com.mycomp.b2b.utenti.ControllerUtentiServlet;
import com.mycomp.b2b.utenti.action.UserNotLogged;
import com.mycomp.eshop.data.Vendor;
import com.mycomp.##module_name_lower_case##.action.##module_name_camel##Action;
import com.mycomp.util.Command;
import com.mycomp.util.TextManipulate;
import com.mycomp.util.myconfiguration.MyConfigurationNotFoundException;
import com.mycomp.util.servlet.MyVelocityServlet;

@WebServlet(urlPatterns = "##module_name_lower_case_slash##", initParams = { @WebInitParam(name = "org.apache.velocity.properties", value = "/WEB-INF/conf/velocity.properties") })
public class Controller##module_name_camel##Servlet extends MyVelocityServlet {
    /*
	private static final long serialVersionUID = ##serial_uid##;
    */

	@Override
	public Template handleRequest(javax.servlet.http.HttpServletRequest req, javax.servlet.http.HttpServletResponse resp, Context ctx) {
		Template template = null;

		try {
			// Process the command
			String templateName = processRequest(req, resp, ctx);

			String templateRoot = getTemplateRootBackoffice(ctx);

			// Get the template
			template = getTemplate(templateRoot + templateName);
		} catch (Exception e) {
			System.out.println("Error handling the request: " + e);
			e.printStackTrace();
		}
		return template;
	}

	@Override
	protected String processRequest(HttpServletRequest req, HttpServletResponse resp, Context ctx) throws Exception {
		String idVendor = req.getParameter("idvendor");
		String currentview = req.getParameter("currentview");

		if (TextManipulate.isValidString(idVendor)) {
			ctx.put("vendor", Vendor.get(getMyConfiguration(ctx), Integer.parseInt(idVendor)));
		}

		if (TextManipulate.isValidString(currentview)) {
			ctx.put("currentview", currentview);
		}

		try {
			super.processRequest(req, resp, ctx);
		} catch (MyConfigurationNotFoundException e) {
			Command c = new UserNotLogged(req, resp, 1);
			return c.notRights(ctx, ControllerUtentiServlet.POINTOFACCESS, 1);
		}

		Command c = null;

		String action = req.getParameter("action");

		ctx.put("angularjs", true);

		ctx.put("idCliente", getMyConfiguration(ctx).getCliente().getIdcliente());

		HttpSession session = req.getSession(false);


		// Azioni da compiere autenticato
		try {
			if (action != null) {
				if (action.equals("##module_name_lower_case##")) {
					c = new ##module_name_camel##Action(req, resp);
				}
			}

			if (c != null)
				return c.exec(ctx);
		} catch (Exception e) {
			e.printStackTrace();
		}

		return null;

	}

}